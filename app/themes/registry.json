{
	"name": "themes",
	"type": "registry:block",
	"dependencies": ["@radix-ui/react-dialog", "@radix-ui/react-popover", "cmdk", "next-themes"],
	"devDependencies": ["knip"],
	"registryDependencies": ["command", "dialog", "popover"],
	"files": [
		{
			"path": "./components/ui/themes/theme-provider.tsx",
			"content": "'use client'\n\nimport { ThemeProvider as NextThemesProvider } from 'next-themes'\nimport * as React from 'react'\n\nexport function ThemeProvider({ children, ...props }: React.ComponentProps<typeof NextThemesProvider>) {\n\treturn <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n",
			"type": "registry:ui"
		},
		{
			"path": "./components/ui/themes/theme-switcher.tsx",
			"content": "'use client'\n\nimport { cn } from '@/lib/utils'\nimport { Check } from 'lucide-react'\nimport { useTheme } from 'next-themes'\nimport { useState } from 'react'\nimport { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from '../command'\nimport { Popover, PopoverContent, PopoverTrigger } from '../popover'\nimport { themes } from './themes'\n\nexport function ThemeSwitcher({ children }: { children: React.ReactNode }) {\n\tconst [open, setOpen] = useState(false)\n\tconst { theme, setTheme } = useTheme()\n\n\treturn (\n\t\t<Popover open={open} onOpenChange={setOpen}>\n\t\t\t<PopoverTrigger asChild>{children}</PopoverTrigger>\n\t\t\t<PopoverContent align='end' className='p-0'>\n\t\t\t\t<Command>\n\t\t\t\t\t<CommandInput placeholder='Search themes...' />\n\t\t\t\t\t<CommandList>\n\t\t\t\t\t\t<CommandEmpty>No theme found.</CommandEmpty>\n\t\t\t\t\t\t<CommandGroup>\n\t\t\t\t\t\t\t{themes.map((t) => (\n\t\t\t\t\t\t\t\t<CommandItem\n\t\t\t\t\t\t\t\t\tkey={t.value}\n\t\t\t\t\t\t\t\t\tvalue={t.value}\n\t\t\t\t\t\t\t\t\tonSelect={(currentValue) => {\n\t\t\t\t\t\t\t\t\t\tsetTheme(currentValue)\n\t\t\t\t\t\t\t\t\t\tsetOpen(false)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tasChild>\n\t\t\t\t\t\t\t\t\t<div className='flex items-center gap-3'>\n\t\t\t\t\t\t\t\t\t\t<div className='flex gap-0.5'>\n\t\t\t\t\t\t\t\t\t\t\t<ColorBox color={t.styles.primary} />\n\t\t\t\t\t\t\t\t\t\t\t<ColorBox color={t.styles.accent} />\n\t\t\t\t\t\t\t\t\t\t\t<ColorBox color={t.styles.secondary} />\n\t\t\t\t\t\t\t\t\t\t\t<ColorBox color={t.styles.border} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<span className='capitalize font-medium'>{t.label ?? 'default'}</span>\n\t\t\t\t\t\t\t\t\t\t<Check className={cn('ml-auto', theme === t.value ? 'opacity-100' : 'opacity-0')} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</CommandItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</CommandGroup>\n\t\t\t\t\t</CommandList>\n\t\t\t\t</Command>\n\t\t\t</PopoverContent>\n\t\t</Popover>\n\t)\n}\n\nfunction ColorBox({ color }: { color: string }) {\n\treturn <div className='h-3 w-3 rounded-sm border border-muted' style={{ backgroundColor: color }} />\n}\n",
			"type": "registry:ui"
		},
		{
			"path": "./components/ui/themes/themes.ts",
			"content": "export const themes = [\n\t{\n\t\tlabel: 'Light',\n\t\tvalue: 'light',\n\t\tstyles: {\n\t\t\tprimary: 'oklch(0.205 0 0)',\n\t\t\tsecondary: 'oklch(0.97 0 0)',\n\t\t\taccent: 'oklch(0.97 0 0)',\n\t\t\tborder: 'oklch(0.922 0 0)',\n\t\t},\n\t},\n\t{\n\t\tlabel: 'Dark',\n\t\tvalue: 'dark',\n\t\tstyles: {\n\t\t\tprimary: 'oklch(0.922 0 0)',\n\t\t\tsecondary: 'oklch(0.269 0 0)',\n\t\t\taccent: 'oklch(0.269 0 0)',\n\t\t\tborder: 'oklch(1 0 0 / 10%)',\n\t\t},\n\t},\n\t{\n\t\tlabel: 'Modern Minimal',\n\t\tvalue: 'modern-minimal',\n\t\tstyles: {\n\t\t\tprimary: 'oklch(0.62 0.19 259.81)',\n\t\t\tsecondary: 'oklch(0.97 0 264.54)',\n\t\t\taccent: 'oklch(0.95 0.03 236.82)',\n\t\t\tborder: 'oklch(0.93 0.01 264.53)',\n\t\t},\n\t},\n\t{\n\t\tlabel: 'Kodama Grove',\n\t\tvalue: 'kodama-grove',\n\t\tstyles: {\n\t\t\tprimary: 'oklch(0.67 0.11 118.91)',\n\t\t\tsecondary: 'oklch(0.85 0.06 91.15)',\n\t\t\taccent: 'oklch(0.84 0.07 90.33)',\n\t\t\tborder: 'oklch(0.69 0.04 59.84)',\n\t\t},\n\t},\n\t{\n\t\tlabel: 'Neo Brutalism',\n\t\tvalue: 'neo-brutalism',\n\t\tstyles: {\n\t\t\tprimary: 'oklch(0.65 0.24 26.97)',\n\t\t\tsecondary: 'oklch(0.97 0.21 109.77)',\n\t\t\taccent: 'oklch(0.56 0.24 260.82)',\n\t\t\tborder: 'oklch(0 0 0)',\n\t\t},\n\t},\n\t{\n\t\tlabel: 'Vintage Paper',\n\t\tvalue: 'vintage-paper',\n\t\tstyles: {\n\t\t\tprimary: 'oklch(0.62 0.08 65.54)',\n\t\t\tsecondary: 'oklch(0.88 0.03 85.57)',\n\t\t\taccent: 'oklch(0.83 0.04 88.81)',\n\t\t\tborder: 'oklch(0.86 0.03 84.59)',\n\t\t},\n\t},\n]\n",
			"type": "registry:ui"
		}
	],
	"tailwind": {},
	"cssVars": {},
	"meta": {}
}
